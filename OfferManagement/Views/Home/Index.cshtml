@model OfferManagement.Models.DiscountTransaction
@using OfferManagement.Models;

@{
    ViewBag.Title = System.Configuration.ConfigurationManager.AppSettings["TransactionsPageName"];
}
<h2>@ViewBag.Title</h2>

<script>
    $(document).ready(function (){

        $('#discount').change(function () {
            $('#BilledValue').val($('#BillValue').val() - $('#discount').val());
        });

        //$('#discount').change(function () {
        //    alert("currentDate changed")

        //});

    });
</script>

@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h3 class="text-info"><b> @ViewBag.Message</b></h3>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PCCName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PCCName, (IEnumerable<SelectListItem>)ViewData["PCCNames"], "Select a PCC Name", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PCCName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BillValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillValue, new { htmlAttributes = new { @class = "form-control",@id = "BillValue" } })
                @Html.ValidationMessageFor(model => model.BillValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", @id = "discount" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BilledValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BilledValue, new { htmlAttributes = new { @class = "form-control",@disabled = "disabled", @id = "BilledValue" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DiscountReason, (IEnumerable<SelectListItem>)ViewData["DiscountReasons"], "Select a Reason", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DiscountReason, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.MessageTemplate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MessageTemplate,
               ((IEnumerable<SelectListItem>)ViewData["SMSTemplates"]),
               htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MessageTemplate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" disabled="@(Model.enableSubmitbtn == false)" value="Save Transaction" class="btn btn-primary" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OTP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <input type="text" id="txtOtp" disabled="@(Model.enableSubmitbtn == true)"  min="4" name="OTPfield" maxlength="4" placeholder="Please Enter OTP" class="form-control" />
                @*@Html.EditorFor(model => model.OTP, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.OTP, "", new { @class = "text-danger" })*@
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-2">
                <input type="button" disabled="@(Model.enableValidatebtn == false)" value="Validate OTP" id="btnValidateOTP" class="btn btn-success"
                       onclick="location.href='@Url.Action("ValidateOTP","Home")?otp=' + $('#txtOtp').val()" />
            </div>
            <div class="col-md-2">
                <input type="button" disabled="@(Model.enableResendbtn == false)" value="Resend OTP" id="btnResendOTP" class="btn btn-success"
                       onclick="location.href='@Url.Action("ResendOTP","Home",Model)'" />
            </div>

        </div>
</div>

}
