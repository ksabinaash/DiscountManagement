@model IEnumerable<OfferManagement.Models.DiscountTransaction>


@{
    ViewBag.Title = @System.Configuration.ConfigurationManager.AppSettings["ReportPageName"];
}
<h2>@ViewBag.Title</h2>
<style>
    /** {
        box-sizing: border-box;
    }*/

    #tablediv {
        height: 500px;
        max-height: 500px;
        overflow-y: auto;
        overflow-x: hidden;
    }

    #filtertxtbox {
        width: 100%;
        font-size: 15px;
        /*padding: 1px 10px 12px 20px;
        border: 1px solid #ddd;
        margin-bottom: 12px;*/
    }

    #ElixerList {
        border-collapse: collapse;
        width: 100%;
        border: 1px solid #ddd;
        font-size: 12px;
    }

        #ElixerList th, #myTable td {
            text-align: left;
            padding: 5px;
            background-color: black;
            color: white;
        }

        #ElixerList tr {
            border-bottom: 1px solid #ddd;
        }

            #ElixerList tr.header, #myTable tr:hover {
                background-color: #f1f1f1;
            }
</style>

<script>

    function applyfilter() {
        var input, filter, table, tr, td, i, txtValue,th;
        input = document.getElementById("filtertxtbox");
        filter = input.value.toUpperCase();
        table = document.getElementById("ElixerList");
        tr = table.getElementsByTagName("tr");
        for (h = 0; h < th.length; h++) {
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[h];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }
    }


    $(document).ready(function () {

        if ('@ViewBag.ExportPermission' == 'True') {
            $('#btnExport').removeAttr('disabled');
        }
        else {
            $('#btnExport').attr('disabled', 'disabled');
        }



        $("#fromdatepicker").datepicker({
            //dateFormat: 'dd-mm-yyyy',
            minDate: "-1M", maxDate: "+1M",
            //showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            //beforeShow: function (input) {
            //    setTimeout(function () {
            //        var buttonPane = $(input)
            //            .datepicker("widget")
            //            .find(".ui-datepicker-buttonpane");

            //        var btn = $('<button class="ui-datepicker-current ui-state-default ui - priority - secondary ui - corner - all" type="button">Clear</button>');
            //        btn.unbind("click")
            //        .bind("click", function () {
            //            $.datepicker._clearDate(input);
            //        });
            //        btn.appendTo(buttonPane);

            //    }, 1);
            //}
        }).datepicker("setDate", new Date());

        $("#todatepicker").datepicker({
            //dateFormat: 'dd-mm-yyyy',
            minDate: "-1M", maxDate: "+1M",
            //showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            //beforeShow: function (input) {
            //    setTimeout(function () {
            //        var buttonPane = $(input)
            //            .datepicker("widget")
            //            .find(".ui-datepicker-buttonpane");

            //        var btn = $('<button class="ui-datepicker-current ui-state-default ui - priority - secondary ui - corner - all" type="button">Clear</button>');
            //        btn.unbind("click")
            //        .bind("click", function () {
            //            $.datepicker._clearDate(input);
            //        });
            //        btn.appendTo(buttonPane);

            //    }, 1);
            //}
        }).datepicker("setDate", new Date());

    });

    function filtertbl() {

        var fromdate = $("#fromdatepicker").val();
        alert(fromdate);
        var todate = $("#todatepicker").val();
        alert(todate);

    }

</script>



<div class="form-horizontal">
    <div class="col-md-10">
        <input type="text" id="filtertxtbox" onkeyup="applyfilter()" placeholder="Search" title="Type"> //works on first column
    </div>

    <div class="form-group">
        <div class="col-md-2">
            @Html.DropDownList("PCCName", (IEnumerable<SelectListItem>)ViewBag.PCCNames, "Select a PCC Name", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-2">
            @Html.DropDownList("ValidationStatus", (IEnumerable<SelectListItem>)ViewBag.ValidationStatus, "Select a Status", new { @class = "form-control" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-2">
            <p>From Date: <input type="text" id="fromdatepicker"></p>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-2">
            <p>To Date: <input type="text" id="todatepicker" onchange="filtertbl()"></p>
        </div>
    </div>


    @*<div>
            <input type="date" data-date="" data-date-format="DD MMMM YYYY" id="fromdate" placeholder="From Date" required />
        </div>

        <div>
            <input type="date" data-date="" data-date-format="DD MMMM YYYY" id="todate" onchange="filtertbl()" placeholder="To Date" required />
        </div>*@

    <div class="form-group">
        <div class="col-md-2">
            <input type="button" value="Export" id="btnExport" class="btn btn-primary"
                   onclick="location.href='@Url.Action("Export","Home", Model)'" disabled />
        </div>
    </div>
</div>

<div>
    <table id="ElixerList" class="table table-bordered table-condensed">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CustomerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserEmail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerEmail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MobileNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BillValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BilledValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OTP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PCCName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MessageTemplate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BilledDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValidationStatus)
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MobileNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BillValue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BilledValue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OTP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PCCName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MessageTemplate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BilledDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValidationStatus)
                </td>
            </tr>
        }


    </table>
</div>
