@model IGrid<OfferManagement.Models.MissedCallGrid>

@{
    ViewBag.Title = @System.Configuration.ConfigurationManager.AppSettings["MissedCallsInformation"];
}
<div class="text-center"><h2>@ViewBag.Title</h2></div>

<script>
    $(document).ready(function () {

        if ('@ViewBag.ExportPermission' == 'True') {
            $("#divExport").show();
        }
        else {
            $("#divExport").hide();
        }


        //var grid = new MvcGrid(document.querySelector('.mvc-grid'));
        //console.log(grid);


        //setTimeout(function () {
        //    new MvcGrid(document.querySelector('.mvc-grid')).reload();

        //}, 5000);


        var ctx = document.getElementById('linechart');

        var xLabels = ['Lab1', 'Lab2', 'Lab3', 'Lab4', 'Lab5'];

        var barMissedCalls = [1, 2, 3, 4, 5];

        var barIncomingCalls = [5, 4, 3, 2, 1];

        var barOutgoingCalls = [3, 7, 2, 1, 0];


        var myChart = new Chart(ctx, {
            type: 'line',

            data: {

                labels: xLabels,

                datasets: [
                    {
                        label: 'Missed Call',
                        data: barMissedCalls,
                        borderColor: 'rgba(118, 93, 105, 1)'
                    },

                    {
                        label: 'Incoming Call',
                        data: barIncomingCalls,
                        borderColor: 'rgba(41, 241, 195, 1)'
                    },
                    {
                        label: 'OutGoing Call',
                        data: barOutgoingCalls,
                        borderColor: 'rgba(44, 130, 201, 1)'
                    }
                ]
            },
            options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        stacked: true
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        stacked: true
                    }]
                }
            }
        });


        var ctx = document.getElementById('piechart');

        var xLabels = ['Lab1', 'Lab2', 'Lab3', 'Lab4', 'Lab5'];

        var barMissedCalls = [1, 2, 3, 4, 5];

        var barIncomingCalls = [5, 4, 3, 2, 1];

        var barOutgoingCalls = [3, 7, 2, 1, 0];


        var myChart = new Chart(ctx, {
            type: 'pie',

            data: {

                labels: xLabels,

                datasets: [
                    {
                        label: 'Missed Call',
                        data: barMissedCalls,
                        backgroundColor: 'rgba(118, 93, 105, 1)'
                    },

                    {
                        label: 'Incoming Call',
                        data: barIncomingCalls,
                        backgroundColor: 'rgba(41, 241, 195, 1)'
                    },
                    {
                        label: 'OutGoing Call',
                        data: barOutgoingCalls,
                        backgroundColor: 'rgba(44, 130, 201, 1)'
                    }
                ]
            },
            options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        stacked: true
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        stacked: true
                    }]
                }
            }
        });


        var ctx = document.getElementById('stackChart');

        var xLabels = ['Lab1', 'Lab2', 'Lab3', 'Lab4', 'Lab5'];

        var barMissedCalls = [1, 2, 3, 4, 5];

        var barIncomingCalls = [5, 4, 3, 2, 1];

        var barOutgoingCalls = [3, 7, 2, 1, 0];


        var myChart = new Chart(ctx, {
            type: 'bar',

            data: {

                labels: xLabels,

                datasets: [
                    {
                        label: 'Missed Call',
                        data: barMissedCalls,
                        backgroundColor: 'rgba(118, 93, 105, 1)'
                    },

                    {
                        label: 'Incoming Call',
                        data: barIncomingCalls,
                        backgroundColor: 'rgba(41, 241, 195, 1)'
                    },
                    {
                        label: 'OutGoing Call',
                        data: barOutgoingCalls,
                        backgroundColor: 'rgba(44, 130, 201, 1)'
                    }
                ]
            },
            options: {
                scales: {
                    xAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                        stacked: true
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        },
                         stacked: true
                    }]
                }
            }
        });

    });
</script>



<div class="container" id="divExport">
    <a style="float: right;" href="@(Url.Action("ExportIndex") + "?" + ViewContext.HttpContext.Request.QueryString)">Export</a>
</div>
<br />
@*<div>
        @(new HtmlGrid<OfferManagement.Models.MissedCallGrid>(Html, Model))
    </div>*@

@*<div class="chart-container" style="position: relative; height:20vh; width:40vw">

    </div>*@



<div class="card-deck row">
    <div class="card col-xs-12 col-md-4 col-lg-4">
        <div class="card-body">
            <canvas id="piechart"></canvas>
        </div>
    </div>
    <div class="card col-xs-12 col-md-4 col-lg-4">
        <div class="card-body">
            <canvas id="linechart"></canvas>
        </div>
    </div>
    <div class="card col-xs-12 col-md-4 col-lg-4">
        <div class="card-body">
            <canvas id="stackChart"></canvas>
        </div>
    </div>
