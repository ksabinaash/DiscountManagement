@model IGrid<OfferManagement.Models.MissedCallGrid>

    @{
        ViewBag.Title = @System.Configuration.ConfigurationManager.AppSettings["MissedCallsInformation"];
    }
    <div class="text-center"><h2>@ViewBag.Title</h2></div>

    <script>
    $(document).ready(function () {


        var callVolumeData;

        LoadCallVolume();
        LoadCallPurpose();
        LoadCallTrend();

        if ('@ViewBag.ExportPermission' == 'True') {
            $("#divExport").show();
        }
        else {
            $("#divExport").hide();
        }

        function LoadCallVolume()
        {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetCallVolume", "CRMCalls")',
            success: function (data) {
                LoadCallVolumeData(data);
                return data;
            },
            error: function (ex) {
                console.log(ex);
            }
        });
        };

        function LoadCallPurpose()
        {
                 $.ajax({
            type: 'GET',
            url: '@Url.Action("GetCallPurpose", "CRMCalls")',
            success: function (data) {
                LoadCallPurposeData(data);
                return data;
            },
            error: function (ex) {
                console.log(ex);
            }
        });
        };

         function LoadCallTrend()
        {
                 $.ajax({
            type: 'GET',
            url: '@Url.Action("GetCallTrends", "CRMCalls")',
            success: function (data) {
                LoadCallTrendData(data);
                return data;
            },
            error: function (ex) {
                console.log(ex);
            }
        });
        };

        function LoadCallVolumeData(data)
        {
            callVolumeData = data;

            console.log("callVolumeData");

            console.log(callVolumeData);

            var r = () => Math.random() * 256 >> 0;
            var ctx = document.getElementById('stackChartVolume');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: callVolumeData.labs,
                    datasets: [
                        {
                            label: callVolumeData.callTypes[0],
                            data: callVolumeData.countData[0],
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`
                        },
                        {
                            label: callVolumeData.callTypes[1],
                            data: callVolumeData.countData[1],
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`
                        },
                        {
                            label: callVolumeData.callTypes[2],
                            data: callVolumeData.countData[2],
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`
                        }

                    ]
                },
                options: {
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: true
                            },
                            stacked: true,
                            offset: true

                        }],
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            },
                            stacked: true,
                            offset: true
                        }]
                    },
                    title: {
                        display: true,
                        text: 'Call Volume Chart - Stack'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false
                    },
                    ticks: {
                        beginAtZero: true,   // minimum value will be 0.,
                        stepSize: 1
                    }
                }
            });

            console.log(callVolumeData);
        }

        function LoadCallPurposeData(data) {
            CallPurposeData = data;

            console.log( CallPurposeData);
            var r = () => Math.random() * 256 >> 0;
            //var color = `rgb(${r()}, ${r()}, ${r()})`;

            var ctx = document.getElementById('piechartpurpose');
            var myChart = new Chart(ctx, {
                type: 'pie',
                data: {
                        datasets: [{
                            data: CallPurposeData.sumData,
                            backgroundColor: [
                                `rgb(${r()}, ${r()}, ${r()})`,
                                `rgb(${r()}, ${r()}, ${r()})`,
                                `rgb(${r()}, ${r()}, ${r()})`
                            ]
                            //label: 'Dataset 1'
                        }],
                    labels: [ CallPurposeData.purposes[0], CallPurposeData.purposes[1], CallPurposeData.purposes[2]],

                },
                options: {
                    title: {
                        display: true,
                        text: 'Call Purpose Chart - Pie'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false
                    },
                    responsive: true,
                }
            });

            var ctx = document.getElementById('stackChartpurpose');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: CallPurposeData.labs,
                    datasets: [
                        {
                            label: CallPurposeData.purposes[0],
                            data: CallPurposeData.countData[0],
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`
                        },
                        {
                            label: CallPurposeData.purposes[1],
                            data: CallPurposeData.countData[1],
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`
                        },
                        {
                            label: CallPurposeData.purposes[2],
                            data: CallPurposeData.countData[2],
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`
                        }
                    ]
                },
                options: {
                    title: {
                        display: true,
                        text: 'Call Purpose - Stacked'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false
                    },
                    responsive: true,
                    scales: {
                        xAxes: [{
                            stacked: true,
                        }],
                        yAxes: [{
                            stacked: true
                        }]
                    }
                }
            });
        }

        function LoadCallTrendData(data) {
            callTrendData = data;
            console.log(callTrendData);

            var r = () => Math.random() * 256 >> 0;
            var ctx = document.getElementById('lineChartTrend');
            var period = callTrendData.period;
            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: period,
                    datasets: [
                        {
                            label: callTrendData.callTypes[0],
                            data: callTrendData.countData,
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`,
                            fill: false,
                        },
                        {
                            label: callTrendData.callTypes[1],
                            data: callTrendData.countData,
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`,
                            fill: false,
                        },
                        {
                            label: callTrendData.callTypes[2],
                            data: callTrendData.countData,
                            backgroundColor: `rgb(${r()}, ${r()}, ${r()})`,
                            fill: false,
                        }

                    ]
                },
                options: {
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'period'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true
                            }
                        }]
                    },
                    title: {
                        display: true,
                        text: 'call TrendData Chart - Stack'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false
                    },
                    ticks: {
                        beginAtZero: true,   // minimum value will be 0.,
                        stepSize: 1
                    }
                }
            });

            console.log(callTrendData);
        }
    });


    </script>



    <div class="container" id="divExport">
        <a style="float: right;" href="@(Url.Action("ExportIndex") + "?" + ViewContext.HttpContext.Request.QueryString)">Export</a>
    </div>
    <br />
    @*<div>
            @(new HtmlGrid<OfferManagement.Models.MissedCallGrid>(Html, Model))
        </div>*@

    @*<div class="chart-container" style="position: relative; height:20vh; width:40vw">

        </div>*@



    <div class="card-deck row">
        <div class="card col-xs-12 col-md-4 col-lg-4">
            <div class="card-body">
                <canvas id="piechartpurpose"></canvas>
            </div>
        </div>
        <div class="card col-xs-12 col-md-4 col-lg-4">
            <div class="card-body">
                <canvas id="stackChartpurpose"></canvas>
            </div>
        </div>
    </div>
    <div class="card-deck row">
        <div class="card col-xs-12 col-md-4 col-lg-4">
            <div class="card-body">
                <canvas id="stackChartVolume"></canvas>
            </div>
        </div>
    </div>
    <div class="card-deck row">
        <div class="card col-xs-12 col-md-4 col-lg-4">
            <div class="card-body">
                <canvas id="lineChartTrend"></canvas>
            </div>
        </div>
    </div>

